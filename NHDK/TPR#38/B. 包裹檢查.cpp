#include <bits/stdc++.h>
using namespace std;
#define cheese ios::sync_with_stdio(0);cin.tie(0);

signed main(){
    cheese
    int n;
    cin >> n;
    int QRC[n][n];
    for(int i=0;i<n;i++){
        string a;
        cin >> a;
        for(int j=0;j<n;j++){
            QRC[i][j] = a[j]-'0';
        }
    }
    int tag = 0;
    int mode = 0;
    if(QRC[0][0]==1 && QRC[0][1]==1 && QRC[0][2]==1 && QRC[0][3]==1 && QRC[0][4]==1 && QRC[0][5]==1 && QRC[0][6]==1 && QRC[0][7]==0){
        if(QRC[1][0]==1 && QRC[1][1]==0 && QRC[1][2]==0 && QRC[1][3]==0 && QRC[1][4]==0 && QRC[1][5]==0 && QRC[1][6]==1 && QRC[1][7]==0){
            if(QRC[2][0]==1 && QRC[2][1]==0 && QRC[2][2]==1 && QRC[2][3]==1 && QRC[2][4]==1 && QRC[2][5]==0 && QRC[2][6]==1 && QRC[2][7]==0){
                if(QRC[3][0]==1 && QRC[3][1]==0 && QRC[3][2]==1 && QRC[3][3]==1 && QRC[3][4]==1 && QRC[3][5]==0 && QRC[3][6]==1 && QRC[3][7]==0){
                    if(QRC[4][0]==1 && QRC[4][1]==0 && QRC[4][2]==1 && QRC[4][3]==1 && QRC[4][4]==1 && QRC[4][5]==0 && QRC[4][6]==1 && QRC[4][7]==0){
                        if(QRC[5][0]==1 && QRC[5][1]==0 && QRC[5][2]==0 && QRC[5][3]==0 && QRC[5][4]==0 && QRC[5][5]==0 && QRC[5][6]==1 && QRC[5][7]==0){
                            if(QRC[6][0]==1 && QRC[6][1]==1 && QRC[6][2]==1 && QRC[6][3]==1 && QRC[6][4]==1 && QRC[6][5]==1 && QRC[6][6]==1 && QRC[6][7]==0){
                                if(QRC[7][0]==0 && QRC[7][1]==0 && QRC[7][2]==0 && QRC[7][3]==0 && QRC[7][4]==0 && QRC[7][5]==0 && QRC[7][6]==0 && QRC[7][7]==0){
                                    tag++;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if(QRC[0][n-1]==1 && QRC[0][n-1-1]==1 && QRC[0][n-1-2]==1 && QRC[0][n-1-3]==1 && QRC[0][n-1-4]==1 && QRC[0][n-1-5]==1 && QRC[0][n-1-6]==1 && QRC[0][n-1-7]==0){
        if(QRC[1][n-1-0]==1 && QRC[1][n-1-1]==0 && QRC[1][n-1-2]==0 && QRC[1][n-1-3]==0 && QRC[1][n-1-4]==0 && QRC[1][n-1-5]==0 && QRC[1][n-1-6]==1 && QRC[1][n-1-7]==0){
            if(QRC[2][n-1-0]==1 && QRC[2][n-1-1]==0 && QRC[2][n-1-2]==1 && QRC[2][n-1-3]==1 && QRC[2][n-1-4]==1 && QRC[2][n-1-5]==0 && QRC[2][n-1-6]==1 && QRC[2][n-1-7]==0){
                if(QRC[3][n-1-0]==1 && QRC[3][n-1-1]==0 && QRC[3][n-1-2]==1 && QRC[3][n-1-3]==1 && QRC[3][n-1-4]==1 && QRC[3][n-1-5]==0 && QRC[3][n-1-6]==1 && QRC[3][n-1-7]==0){
                    if(QRC[4][n-1-0]==1 && QRC[4][n-1-1]==0 && QRC[4][n-1-2]==1 && QRC[4][n-1-3]==1 && QRC[4][n-1-4]==1 && QRC[4][n-1-5]==0 && QRC[4][n-1-6]==1 && QRC[4][n-1-7]==0){
                        if(QRC[5][n-1-0]==1 && QRC[5][n-1-1]==0 && QRC[5][n-1-2]==0 && QRC[5][n-1-3]==0 && QRC[5][n-1-4]==0 && QRC[5][n-1-5]==0 && QRC[5][n-1-6]==1 && QRC[5][n-1-7]==0){
                            if(QRC[6][n-1-0]==1 && QRC[6][n-1-1]==1 && QRC[6][n-1-2]==1 && QRC[6][n-1-3]==1 && QRC[6][n-1-4]==1 && QRC[6][n-1-5]==1 && QRC[6][n-1-6]==1 && QRC[6][n-1-7]==0){
                                if(QRC[7][n-1-0]==0 && QRC[7][n-1-1]==0 && QRC[7][n-1-2]==0 && QRC[7][n-1-3]==0 && QRC[7][n-1-4]==0 && QRC[7][n-1-5]==0 && QRC[7][n-1-6]==0 && QRC[7][n-1-7]==0){
                                    tag++;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if(QRC[n-1-0][0]==1 && QRC[n-1-0][1]==1 && QRC[n-1-0][2]==1 && QRC[n-1-0][3]==1 && QRC[n-1-0][4]==1 && QRC[n-1-0][5]==1 && QRC[n-1-0][6]==1 && QRC[n-1-0][7]==0){
        if(QRC[n-1-1][0]==1 && QRC[n-1-1][1]==0 && QRC[n-1-1][2]==0 && QRC[n-1-1][3]==0 && QRC[n-1-1][4]==0 && QRC[n-1-1][5]==0 && QRC[n-1-1][6]==1 && QRC[n-1-1][7]==0){
            if(QRC[n-1-2][0]==1 && QRC[n-1-2][1]==0 && QRC[n-1-2][2]==1 && QRC[n-1-2][3]==1 && QRC[n-1-2][4]==1 && QRC[n-1-2][5]==0 && QRC[n-1-2][6]==1 && QRC[n-1-2][7]==0){
                if(QRC[n-1-3][0]==1 && QRC[n-1-3][1]==0 && QRC[n-1-3][2]==1 && QRC[n-1-3][3]==1 && QRC[n-1-3][4]==1 && QRC[n-1-3][5]==0 && QRC[n-1-3][6]==1 && QRC[n-1-3][7]==0){
                    if(QRC[n-1-4][0]==1 && QRC[n-1-4][1]==0 && QRC[n-1-4][2]==1 && QRC[n-1-4][3]==1 && QRC[n-1-4][4]==1 && QRC[n-1-4][5]==0 && QRC[n-1-4][6]==1 && QRC[n-1-4][7]==0){
                        if(QRC[n-1-5][0]==1 && QRC[n-1-5][1]==0 && QRC[n-1-5][2]==0 && QRC[n-1-5][3]==0 && QRC[n-1-5][4]==0 && QRC[n-1-5][5]==0 && QRC[n-1-5][6]==1 && QRC[n-1-5][7]==0){
                            if(QRC[n-1-6][0]==1 && QRC[n-1-6][1]==1 && QRC[n-1-6][2]==1 && QRC[n-1-6][3]==1 && QRC[n-1-6][4]==1 && QRC[n-1-6][5]==1 && QRC[n-1-6][6]==1 && QRC[n-1-6][7]==0){
                                if(QRC[n-1-7][0]==0 && QRC[n-1-7][1]==0 && QRC[n-1-7][2]==0 && QRC[n-1-7][3]==0 && QRC[n-1-7][4]==0 && QRC[n-1-7][5]==0 && QRC[n-1-7][6]==0 && QRC[n-1-7][7]==0){
                                    tag++;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if(QRC[n-1-0][n-1]==1 && QRC[n-1-0][n-1-1]==1 && QRC[n-1-0][n-1-2]==1 && QRC[n-1-0][n-1-3]==1 && QRC[n-1-0][n-1-4]==1 && QRC[n-1-0][n-1-5]==1 && QRC[n-1-0][n-1-6]==1 && QRC[n-1-0][n-1-7]==0){
        if(QRC[n-1-1][n-1-0]==1 && QRC[n-1-1][n-1-1]==0 && QRC[n-1-1][n-1-2]==0 && QRC[n-1-1][n-1-3]==0 && QRC[n-1-1][n-1-4]==0 && QRC[n-1-1][n-1-5]==0 && QRC[n-1-1][n-1-6]==1 && QRC[n-1-1][n-1-7]==0){
            if(QRC[n-1-2][n-1-0]==1 && QRC[n-1-2][n-1-1]==0 && QRC[n-1-2][n-1-2]==1 && QRC[n-1-2][n-1-3]==1 && QRC[n-1-2][n-1-4]==1 && QRC[n-1-2][n-1-5]==0 && QRC[n-1-2][n-1-6]==1 && QRC[n-1-2][n-1-7]==0){
                if(QRC[n-1-3][n-1-0]==1 && QRC[n-1-3][n-1-1]==0 && QRC[n-1-3][n-1-2]==1 && QRC[n-1-3][n-1-3]==1 && QRC[n-1-3][n-1-4]==1 && QRC[n-1-3][n-1-5]==0 && QRC[n-1-3][n-1-6]==1 && QRC[n-1-3][n-1-7]==0){
                    if(QRC[n-1-4][n-1-0]==1 && QRC[n-1-4][n-1-1]==0 && QRC[n-1-4][n-1-2]==1 && QRC[n-1-4][n-1-3]==1 && QRC[n-1-4][n-1-4]==1 && QRC[n-1-4][n-1-5]==0 && QRC[n-1-4][n-1-6]==1 && QRC[n-1-4][n-1-7]==0){
                        if(QRC[n-1-5][n-1-0]==1 && QRC[n-1-5][n-1-1]==0 && QRC[n-1-5][n-1-2]==0 && QRC[n-1-5][n-1-3]==0 && QRC[n-1-5][n-1-4]==0 && QRC[n-1-5][n-1-5]==0 && QRC[n-1-5][n-1-6]==1 && QRC[n-1-5][n-1-7]==0){
                            if(QRC[n-1-6][n-1-0]==1 && QRC[n-1-6][n-1-1]==1 && QRC[n-1-6][n-1-2]==1 && QRC[n-1-6][n-1-3]==1 && QRC[n-1-6][n-1-4]==1 && QRC[n-1-6][n-1-5]==1 && QRC[n-1-6][n-1-6]==1 && QRC[n-1-6][n-1-7]==0){
                                if(QRC[n-1-7][n-1-0]==0 && QRC[n-1-7][n-1-1]==0 && QRC[n-1-7][n-1-2]==0 && QRC[n-1-7][n-1-3]==0 && QRC[n-1-7][n-1-4]==0 && QRC[n-1-7][n-1-5]==0 && QRC[n-1-7][n-1-6]==0 && QRC[n-1-7][n-1-7]==0){
                                    tag++;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if(tag==3){
        cout << "Yes";
    }
    else{
        cout << "No";
    }
}



